[
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "str_xor",
        "kind": 2,
        "importPath": "files.fixme1",
        "description": "files.fixme1",
        "peekOfCode": "def str_xor(secret, key):\n    #extend key to secret length\n    new_key = key\n    i = 0\n    while len(new_key) < len(secret):\n        new_key = new_key + key[i]\n        i = (i + 1) % len(key)        \n    return \"\".join([chr(ord(secret_c) ^ ord(new_key_c)) for (secret_c,new_key_c) in zip(secret,new_key)])\nflag_enc = chr(0x15) + chr(0x07) + chr(0x08) + chr(0x06) + chr(0x27) + chr(0x21) + chr(0x23) + chr(0x15) + chr(0x5a) + chr(0x07) + chr(0x00) + chr(0x46) + chr(0x0b) + chr(0x1a) + chr(0x5a) + chr(0x1d) + chr(0x1d) + chr(0x2a) + chr(0x06) + chr(0x1c) + chr(0x5a) + chr(0x5c) + chr(0x55) + chr(0x40) + chr(0x3a) + chr(0x5f) + chr(0x53) + chr(0x5b) + chr(0x57) + chr(0x41) + chr(0x57) + chr(0x08) + chr(0x5c) + chr(0x14)\nflag = str_xor(flag_enc, 'enkidu')",
        "detail": "files.fixme1",
        "documentation": {}
    },
    {
        "label": "flag_enc",
        "kind": 5,
        "importPath": "files.fixme1",
        "description": "files.fixme1",
        "peekOfCode": "flag_enc = chr(0x15) + chr(0x07) + chr(0x08) + chr(0x06) + chr(0x27) + chr(0x21) + chr(0x23) + chr(0x15) + chr(0x5a) + chr(0x07) + chr(0x00) + chr(0x46) + chr(0x0b) + chr(0x1a) + chr(0x5a) + chr(0x1d) + chr(0x1d) + chr(0x2a) + chr(0x06) + chr(0x1c) + chr(0x5a) + chr(0x5c) + chr(0x55) + chr(0x40) + chr(0x3a) + chr(0x5f) + chr(0x53) + chr(0x5b) + chr(0x57) + chr(0x41) + chr(0x57) + chr(0x08) + chr(0x5c) + chr(0x14)\nflag = str_xor(flag_enc, 'enkidu')\nprint('That is correct! Here\\'s your flag: ' + flag)",
        "detail": "files.fixme1",
        "documentation": {}
    },
    {
        "label": "flag",
        "kind": 5,
        "importPath": "files.fixme1",
        "description": "files.fixme1",
        "peekOfCode": "flag = str_xor(flag_enc, 'enkidu')\nprint('That is correct! Here\\'s your flag: ' + flag)",
        "detail": "files.fixme1",
        "documentation": {}
    },
    {
        "label": "str_xor",
        "kind": 2,
        "importPath": "files.fixme2",
        "description": "files.fixme2",
        "peekOfCode": "def str_xor(secret, key):\n    #extend key to secret length\n    new_key = key\n    i = 0\n    while len(new_key) < len(secret):\n        new_key = new_key + key[i]\n        i = (i + 1) % len(key)        \n    return \"\".join([chr(ord(secret_c) ^ ord(new_key_c)) for (secret_c,new_key_c) in zip(secret,new_key)])\nflag_enc = chr(0x15) + chr(0x07) + chr(0x08) + chr(0x06) + chr(0x27) + chr(0x21) + chr(0x23) + chr(0x15) + chr(0x58) + chr(0x18) + chr(0x11) + chr(0x41) + chr(0x09) + chr(0x5f) + chr(0x1f) + chr(0x10) + chr(0x3b) + chr(0x1b) + chr(0x55) + chr(0x1a) + chr(0x34) + chr(0x5d) + chr(0x51) + chr(0x40) + chr(0x54) + chr(0x09) + chr(0x05) + chr(0x04) + chr(0x57) + chr(0x1b) + chr(0x11) + chr(0x31) + chr(0x0e) + chr(0x51) + chr(0x5c) + chr(0x44) + chr(0x51) + chr(0x0a) + chr(0x5b) + chr(0x5a) + chr(0x19)\nflag = str_xor(flag_enc, 'enkidu')",
        "detail": "files.fixme2",
        "documentation": {}
    },
    {
        "label": "flag_enc",
        "kind": 5,
        "importPath": "files.fixme2",
        "description": "files.fixme2",
        "peekOfCode": "flag_enc = chr(0x15) + chr(0x07) + chr(0x08) + chr(0x06) + chr(0x27) + chr(0x21) + chr(0x23) + chr(0x15) + chr(0x58) + chr(0x18) + chr(0x11) + chr(0x41) + chr(0x09) + chr(0x5f) + chr(0x1f) + chr(0x10) + chr(0x3b) + chr(0x1b) + chr(0x55) + chr(0x1a) + chr(0x34) + chr(0x5d) + chr(0x51) + chr(0x40) + chr(0x54) + chr(0x09) + chr(0x05) + chr(0x04) + chr(0x57) + chr(0x1b) + chr(0x11) + chr(0x31) + chr(0x0e) + chr(0x51) + chr(0x5c) + chr(0x44) + chr(0x51) + chr(0x0a) + chr(0x5b) + chr(0x5a) + chr(0x19)\nflag = str_xor(flag_enc, 'enkidu')\n# Check that flag is not empty\nif flag == \"\":\n  print('String XOR encountered a problem, quitting.')\nelse:\n  print('That is correct! Here\\'s your flag: ' + flag)",
        "detail": "files.fixme2",
        "documentation": {}
    },
    {
        "label": "flag",
        "kind": 5,
        "importPath": "files.fixme2",
        "description": "files.fixme2",
        "peekOfCode": "flag = str_xor(flag_enc, 'enkidu')\n# Check that flag is not empty\nif flag == \"\":\n  print('String XOR encountered a problem, quitting.')\nelse:\n  print('That is correct! Here\\'s your flag: ' + flag)",
        "detail": "files.fixme2",
        "documentation": {}
    }
]